# This is the complex Travis configuration, which is intended for use
# on open source libraries which need compatibility across multiple GHC
# versions, must work with cabal-install, and should be
# cross-platform. For more information and other options, see:
#
# https://docs.haskellstack.org/en/stable/travis_ci/
#
# Copy these contents into the root directory of your Github project in a file
# named .travis.yml

# Use new container infrastructure to enable caching
sudo: false

# Do not choose a language; we provide our own build tools.
language: generic

# Caching so the next build will be fast too.
cache:
  directories:
  - $HOME/.ghc
  - $HOME/.cabal
  - $HOME/.stack
  - $HOME/.gcc

# The different configurations we want to test. We have BUILD=cabal which uses
# cabal-install, and BUILD=stack which uses Stack. More documentation on each
# of those below.
#
# We set the compiler values here to tell Travis to use a different
# cache file per set of arguments.
#
# If you need to have different apt packages for each combination in the
# matrix, you can use a line such as:
#     addons: {apt: {packages: [libfcgi-dev,libgmp-dev]}}
matrix:
  include:
#  - env: BUILD=cabal GHCVER=7.10.3 CABALVER=1.22 HAPPYVER=1.19.5 ALEXVER=3.1.7 GCCVER=6 COMPILER=gcc-6
#    compiler: ": #GHC 7.10.3"
#    addons: {apt: {packages: [cabal-install-1.22,ghc-7.10.3,happy-1.19.5,alex-3.1.7,gcc-6], sources: [hvr-ghc,ubuntu-toolchain-r-test ]}}
#  - env: BUILD=cabal GHCVER=8.0.1 CABALVER=1.24 HAPPYVER=1.19.5 ALEXVER=3.1.7 GCCVER=6 COMPILER=gcc-6
#    compiler: ": #GHC 8.0.1"
#    addons: {apt: {packages: [cabal-install-1.24,ghc-8.0.1,happy-1.19.5,alex-3.1.7,gcc-6], sources: [hvr-ghc,ubuntu-toolchain-r-test]}}
#
#  # Build with the newest GHC and cabal-install. This is an accepted failure,
#  # see below.
#  - env: BUILD=cabal GHCVER=head  CABALVER=head HAPPYVER=1.19.5 ALEXVER=3.1.7 GCCVER=6
#    compiler: ": #GHC HEAD"
#    addons: {apt: {packages: [cabal-install-head,ghc-head,happy-1.19.5,alex-3.1.7,gcc-6], sources: [hvr-ghc,ubuntu-toolchain-r-test]}}
#
#
#  - env: BUILD=stack ARGS="--resolver lts-6"
#    compiler: ": #stack 7.10.3 osx"
#    os: osx
#
  - env: BUILD=stack ARGS="--resolver lts-7"
    compiler: ": #stack 8.0.1 osx"
    os: osx
#
  - env: BUILD=stack ARGS="--resolver nightly"
    compiler: ": #stack nightly osx"
    os: osx
#
  allow_failures:
#  - env: BUILD=cabal GHCVER=head  CABALVER=head HAPPYVER=1.19.5 ALEXVER=3.1.7 GCCVER=6
  - env: BUILD=stack ARGS="--resolver nightly"

before_install:
# Using compiler above sets CC to an invalid value, so unset it
- unset CC
# We want to always allow newer versions of packages when building on GHC HEAD
- CABALARGS=" --ghc-options=-I/usr/lib/gcc/x86_64-linux-gnu/6/include/"
- if [ "x$GHCVER" = "xhead" ]; then CABALARGS=--allow-newer; fi
# Set paths
- export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$HOME/.local/bin:/opt/alex/$ALEXVER/bin:/opt/happy/$HAPPYVER/bin:$HOME/.cabal/bin:$HOME/.gcc/bin:$PATH
# Set the GCC...

- if [ $BUILD == "cabal"]; then
    mkdir -p ~/.gcc/bin;
    ln -s /usr/bin/gcc-6 $HOME/.gcc/bin/gcc; 
  fi
# - echo `gcc --version`
# - echo `whereis gcc`
# - echo `find /usr/ -type f -name stdalign.h`
- export C_INCLUDE_PATH=$/usr/lib/x86_64-linux-gnu/$GCCVER/include:$C_INCLUDE_PATH
# Download and unpack the stack executable
- mkdir -p ~/.local/bin
- |
  if [ `uname` = "Darwin" ]
  then
    travis_retry curl --insecure -L https://www.stackage.org/stack/osx-x86_64 | tar xz --strip-components=1 --include '*/stack' -C ~/.local/bin
  else
    travis_retry curl -L https://www.stackage.org/stack/linux-x86_64 | tar xz --wildcards --strip-components=1 -C ~/.local/bin '*/stack'
  fi

  # Use the more reliable S3 mirror of Hackage
  mkdir -p $HOME/.cabal
  echo 'remote-repo: hackage.haskell.org:http://hackage.fpcomplete.com/' > $HOME/.cabal/config
  echo 'remote-repo-cache: $HOME/.cabal/packages' >> $HOME/.cabal/config

  if [ "$CABALVER" != "1.16" ]
  then
    echo 'jobs: $ncpus' >> $HOME/.cabal/config
  fi

install:  
- if [ $BUILD == "cabal"]; then
    mkdir -p ~/.gcc/include;
    ln -s /usr/lib/gcc/x86_64-linux-gnu/6/include/ $HOME/.gcc/include/;
  fi
# - find /usr/ -type f -name stdalign.h
- echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
- if [ -f configure.ac ]; then autoreconf -i; fi
- |
  set -ex
  case "$BUILD" in
    stack)
      stack setup
      stack install cabal-install
      stack init --solver --install-ghc
      if [ "$?" -ne 0]; then
        stack solver
      fi;
      stack --no-terminal --install-ghc $ARGS test --bench --only-dependencies
      ;;
    cabal)
      cabal --version
      travis_retry cabal update

      # Get the list of packages from the stack.yaml file
      PACKAGES=$(stack --install-ghc query locals | grep '^ *path' | sed 's@^ *path:@@')

      cabal install --only-dependencies --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES
      ;;
  esac
  set +ex

script:
- |
  set -ex
  case "$BUILD" in
    stack)
      stack --no-terminal $ARGS test --bench --no-run-benchmarks --haddock --no-haddock-deps
      ;;
    cabal)
      cabal install --enable-tests --enable-benchmarks --force-reinstalls --ghc-options=-O0 --reorder-goals --max-backjumps=-1 $CABALARGS $PACKAGES

      ORIGDIR=$(pwd)
      for dir in $PACKAGES
      do
        cd $dir
        cabal check || [ "$CABALVER" == "1.16" ]
        cabal sdist
        PKGVER=$(cabal info . | awk '{print $2;exit}')
        SRC_TGZ=$PKGVER.tar.gz
        cd dist
        tar zxfv "$SRC_TGZ"
        cd "$PKGVER"
        cabal configure --enable-tests
        cabal build
        cd $ORIGDIR
      done
      ;;
  esac
  set +ex

